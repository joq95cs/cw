SELECT NOMBRE_ARTÍCULO, PRECIO, ROUND(PRECIO*1.21, 2) AS PRECIO_IVA FROM PRODUCTOS

SELECT NOMBRE_ARTÍCULO, PRECIO, PRECIO-3 AS PRECIO_DESCUENTO FROM PRODUCTOS

SELECT NOMBRE_ARTÍCULO, SECCIÓN, PRECIO, FECHA, DATE_FORMAT(NOW(), '%D-%M') AS FECHA_HOY, DATEDIFF(NOW(), FECHA) AS DIFERENCIA FROM PRODUCTOS WHERE SECCIÓN = 'DEPORTES'

SELECT * FROM PRODUCTOS WHERE SECCIÓN = 'DEPORTES' UNION SELECT * FROM PRODUCTOSNUEVOS WHERE SECCIÓN = 'DEPORTES DE RIESGO'

SELECT * FROM PRODUCTOS WHERE PRECIO > 500 UNION SELECT * FROM PRODUCTOSNUEVOS WHERE SECCIÓN = 'ALTA COSTURA'

SELECT * FROM PRODUCTOS WHERE SECCIÓN = 'DEPORTES' UNION ALL SELECT * FROM PRODUCTOSNUEVOS

SELECT * FROM CLIENTES INNER JOIN PEDIDOS ON CLIENTES.CÓDIGO_CLIENTE = PEDIDOS.CÓDIGO_CLIENTE WHERE POBLACIÓN = 'MADRID'

SELECT * FROM CLIENTES LEFT JOIN PEDIDOS ON CLIENTES.CÓDIGO_CLIENTE = PEDIDOS.CÓDIGO_CLIENTE WHERE POBLACIÓN = 'MADRID'

SELECT * FROM PEDIDOS RIGHT JOIN CLIENTES ON PEDIDOS.CÓDIGO_CLIENTE = CLIENTES.CÓDIGO_CLIENTE WHERE POBLACIÓN = 'MADRID'

SELECT NOMBRE_ARTÍCULO, PRECIO FROM PRODUCTOS WHERE CÓDIGO_ARTÍCULO IN (SELECT CÓDIGO_ARTÍCULO FROM PRODUCTOS_PEDIDOS WHERE UNIDADES > 20)

SELECT CLIENTES.CÓDIGO_CLIENTE, POBLACIÓN, DIRECCIÓN, NÚMERO_PEDIDO, PEDIDOS.CÓDIGO_CLIENTE, FORMA_PAGO FROM CLIENTES LEFT JOIN PEDIDOS ON CLIENTES.CÓDIGO_CLIENTE = PEDIDOS.CÓDIGO_CLIENTE WHERE POBLACIÓN = 'MADRID' AND PEDIDOS.CÓDIGO_CLIENTE IS NULL

SELECT NOMBRE_ARTÍCULO, SECCIÓN FROM PRODUCTOS WHERE PRECIO > (SELECT AVG(PRECIO) FROM PRODUCTOS)

SELECT * FROM PRODUCTOS WHERE PRECIO > ALL (SELECT PRECIO FROM PRODUCTOS WHERE SECCIÓN = 'CERÁMICA')

SELECT * FROM PRODUCTOS WHERE PRECIO > ANY (SELECT PRECIO FROM PRODUCTOS WHERE SECCIÓN = 'CERÁMICA')

SELECT NOMBRE_ARTÍCULO, PRECIO FROM PRODUCTOS INNER JOIN PRODUCTOS_PEDIDOS ON PRODUCTOS.CÓDIGO_ARTÍCULO = PRODUCTOS_PEDIDOS.CÓDIGO_ARTÍCULO  WHERE UNIDADES > 20

SELECT EMPRESA, POBLACIÓN FROM CLIENTES WHERE CÓDIGO_CLIENTE NOT IN (SELECT CÓDIGO_CLIENTE FROM PEDIDOS WHERE FORMA_PAGO = 'TARJETA') ORDER BY EMPRESA ASC

UPDATE PRODUCTOS SET PRECIO = PRECIO + 10 WHERE SECCIÓN = 'DEPORTES'

UPDATE PRODUCTOS SET SECCIÓN = 'DEPORTIVOS' WHERE SECCIÓN = 'DEPORTES'

SELECT * INTO CLIENTES_MADRID FROM CLIENTES WHERE POBLACIÓN = 'MADRID'

DELETE FROM CLIENTES WHERE POBLACIÓN = 'MADRID'

DELETE FROM PRODUCTOS WHERE SECCIÓN = 'CONFECCIÓN' OR SECCIÓN = 'CERÁMICA'

DELETE FROM CLIENTES WHERE POBLACIÓN = 'MADRID'

DELETE FROM PRODUCTOS WHERE SECCIÓN = 'CONFECCIÓN' OR SECCIÓN = 'CERÁMICA'

SELECT DISTINCT EMPRESA AS NOMBRE_EMPRESA FROM CLIENTES INNER JOIN PEDIDOS ON CLIENTES.CÓDIGO_CLIENTE = PEDIDOS.CÓDIGO_CLIENTE ORDER BY EMPRESA

SELECT DISTINCT POBLACIÓN FROM CLIENTES

SELECT DISTINCTROW * FROM productos WHERE SECCIÓN = 'FERRETERÍA'

DELETE DISTINCTROW CLIENTES.*, PEDIDOS.CÓDIGO_CLIENTE FROM CLIENTES LEFT JOIN PEDIDOS ON CLIENTES.CÓDIGO_CLIENTE = PEDIDOS.CÓDIGO_CLIENTE WHERE PEDIDOS.CÓDIGO_CLIENTE IS NULL

INSERT INTO CLIENTES SELECT * FROM CLIENTES_MADRID

INSERT INTO CLIENTES (CÓDIGO_CLIENTE, EMPRESA, POBLACIÓN, TELÉFONO) SELECT CÓDIGO_CLIENTE, EMPRESA, POBLACIÓN, TELÉFONO FROM CLIENTES_MADRID

DELETE FROM CLIENTES WHERE RESPONSABLE IS NULL

INSERT INTO CLIENTES (CÓDIGO_CLIENTE, EMPRESA, DIRECCIÓN, TELÉFONO, RESPONSABLE, HISTORIAL) SELECT CÓDIGO_CLIENTE, EMPRESA, DIRECCIÓN, TELÉFONO, RESPONSABLE, HISTORIAL FROM CLIENTES_MADRID WHERE POBLACIÓN = 'MADRID'

SELECT CLIENTES_MADRID.CÓDIGO_CLIENTE, CLIENTES.POBLACIÓN , CLIENTES.CÓDIGO_CLIENTE FROM CLIENTES_MADRID INNER JOIN CLIENTES ON CLIENTES_MADRID.CÓDIGO_CLIENTE = CLIENTES.CÓDIGO_CLIENTE

UPDATE CLIENTES SET POBLACIÓN = 'MADRID' WHERE POBLACIÓN IS NULL

SELECT COUNT(POBLACIÓN) AS NO_CLIENTES_MADRID FROM CLIENTES WHERE POBLACIÓN = 'MADRID'

TRANSFORM SUM(PRECIO) AS TOTAL SELECT NOMBRE_ARTÍCULO FROM PRODUCTOS GROUP BY NOMBRE_ARTÍCULO PIVOT SECCIÓN

TRANSFORM SUM(PRECIO) SELECT SECCIÓN FROM PRODUCTOS GROUP BY SECCIÓN PIVOT NOMBRE_ARTÍCULO

TRANSFORM COUNT(CÓDIGO_ARTÍCULO) SELECT NOMBRE_ARTÍCULO FROM PRODUCTOS GROUP BY NOMBRE_ARTÍCULO PIVOT SECCIÓN

SELECT EMPRESA, POBLACIÓN, FORMA_PAGO FROM CLIENTES INNER JOIN PEDIDOS ON CLIENTES.CÓDIGO_CLIENTE = PEDIDOS.CÓDIGO_CLIENTE

TRANSFORM COUNT(POBLACIÓN) AS TOTAL_FORMA_PAGO SELECT EMPRESA FROM PREVIA GROUP BY EMPRESA PIVOT FORMA_PAGO

TRANSFORM SUM(PRECIO) AS TOTAL SELECT NOMBRE_ARTÍCULO, PAÍS_ORIGEN FROM PRODUCTOS GROUP BY NOMBRE_ARTÍCULO, PAÍS_ORIGEN PIVOT SECCIÓN

SELECT NOMBRE_ARTÍCULO, UNIDADES FROM PRODUCTOS INNER JOIN PRODUCTOS_PEDIDOS ON PRODUCTOS.CÓDIGO_ARTÍCULO = PRODUCTOS_PEDIDOS.CÓDIGO_ARTÍCULO ORDER BY NOMBRE_ARTÍCULO ASC

CREATE TABLE PRUEBA (NOMBRE TEXT(20))

DROP TABLE PRUEBA

CREATE TABLE PRUEBA (NOMBRE TEXT(20), APELLIDO TEXT(20), EDAD BYTE, FECHA_NACIMIENTO DATE, TIENE_CARNET BIT)

CREATE TABLE PRUEBA (ID_ALUMNO COUNTER, NOMBRE TEXT(20), APELLIDO TEXT(20), EDAD BYTE, FECHA_NACIMIENTO DATE, TIENE_CARNET BIT)

CREATE TABLE FRUTAS (ID_FRUTA COUNTER, NOMBRE TEXT(20), PRIMARY KEY (ID_FRUTA))

ALTER TABLE CLIENTES_MADRID ADD COLUMN FECHA_BAJA DATE

ALTER TABLE PRUEBA ADD COLUMN POBLACIÓN TEXT(20)

ALTER TABLE PRUEBA DROP COLUMN POBLACIÓN

ALTER TABLE CLIENTES_MADRID ALTER COLUMN FECHA_BAJA DATE

ALTER TABLE CLIENTES_MADRID ALTER COLUMN LUGAR_NACIMIENTO SET DEFAULT 'DESCONOCIDO'

ALTER TABLE CLIENTES_MADRID ALTER COLUMN LUGAR_NACIMIENTO DROP DEFAULT 'DESCONOCIDO'

CREATE TABLE EJEMPLO (DNI TEXT, NOMBRE TEXT, APELLIDO TEXT, EDAD NUMBER)

CREATE TABLE EJEMPLO (DNI TEXT, NOMBRE TEXT, APELLIDO TEXT, EDAD NUMBER, PRIMARY KEY (DNI))

ALTER TABLE EJEMPLO ADD PRIMARY KEY (DNI)

ALTER TABLE EJEMPLO ADD PRIMARY KEY (NOMBRE, APELLIDO)

CREATE INDEX MI_INDICE ON EJEMPLO (APELLIDO)

CREATE UNIQUE INDEX MI_INDICE_UNICO ON EJEMPLO (APELLIDO)

CREATE UNIQUE INDEX MI_INDICE ON EJEMPLO (NOMBRE, APELLIDO)

DROP INDEX MI_INDICE ON EJEMPLO

ALTER TABLE EJEMPLO DROP CONSTRAINT Index_BA4C1131_9D6E_40AF

CREATE TRIGGER PRODUCTOS_AI AFTER INSERT ON productos FOR EACH ROW INSERT INTO reg_productos (CÓDIGOARTÍCULO, NOMBREARTÍCULO, PRECIO, INSERTADO) VALUES (NEW.CÓDIGOARTÍCULO, NEW.NOMBREARTÍCULO, NEW.PRECIO, NOW())

CREATE TRIGGER ACTUALIZA_PRODUCTOS_BU BEFORE UPDATE ON productos FOR EACH ROW INSERT INTO productos_actualizados (ANTERIOR_CÓDIGOARTICULO, ANTERIOR_FECHA, ANTERIOR_IMPORTADO, ANTERIOR_NOMBREARTÍCULO, ANTERIOR_PAÍSDEORIGEN, ANTERIOR_PRECIO, ANTERIOR_SECCIÓN, NUEVO_CÓDIGOARTICULO, NUEVO_FECHA, NUEVO_IMPORTADO, NUEVO_NOMBREARTÍCULO, NUEVO_PAÍSDEORIGEN, NUEVO_PRECIO, NUEVO_SECCIÓN, USUARIO, F_MODIF) VALUES (OLD.CÓDIGOARTÍCULO, OLD.FECHA, OLD.IMPORTADO, OLD.NOMBREARTÍCULO, OLD.PAÍSDEORIGEN, OLD.PRECIO, OLD.SECCIÓN, NEW.CÓDIGOARTÍCULO, NEW.FECHA, NEW.IMPORTADO, NEW.NOMBREARTÍCULO, NEW.PAÍSDEORIGEN, NEW.PRECIO, NEW.SECCIÓN, CURRENT_USER(), NOW()) 